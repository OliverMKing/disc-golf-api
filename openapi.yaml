openapi: 3.0.1
info:
  title: Disc Golf API
  description: Open-source Disc golf api that follows OpenAPI specification. Source code can be found [here](https://github.com/OliverMKing/disc-golf-api).
  contact:
    email: olivermerkleyking@gmail.com
  license:
    name: MIT
    url: https://github.com/OliverMKing/disc-golf-api/blob/main/LICENSE
  version: 0.0.1
externalDocs:
  description: Report an issue
  url: https://github.com/OliverMKing/disc-golf-api/issues
servers:
  - url: https://discgolfapi.com/v1
tags:
  - name: disc
    description: Everything about disc golf discs
paths:
  /disc:
    get:
      tags:
        - disc
      summary: Get a paginated list of discs
      description: Returns a list of discs. Follows the [OData](http://docs.oasis-open.org/odata/odata-json-format/v4.0/cos01/odata-json-format-v4.0-cos01.html#_Toc372793055) paged responses guidelines.
      operationId: listdisc
      parameters:
        - name: skipToken
          in: query
          description: Allows for resources already returned to be skipped. Automatically incremented through nextLink.
          schema:
            type: integer
            format: int64
        - name: top
          in: query
          description: Maximum numbers of discs to be returned
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextLink:
                    description: The URL a client should use to get the next page
                    type: string
                    example: https://discgolfapi.com/v1/disc?skipToken={nextSkipToken}&top={top}
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/disc"
      security:
        - api_key: []
    put:
      tags:
        - disc
      summary: Update an existing disc
      operationId: updatedisc
      requestBody:
        description: Disc object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disc"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Disc not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
        - discstore_auth:
            - write:discs
            - read:discs
      x-codegen-request-body-name: body
    post:
      tags:
        - disc
      summary: Add a new disc to the store
      operationId: adddisc
      requestBody:
        description: Disc object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disc"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - discstore_auth:
            - write:discs
            - read:discs
      x-codegen-request-body-name: body
  /disc/{discId}:
    get:
      tags:
        - disc
      summary: Find disc by ID
      description: Returns a single disc
      operationId: getdiscById
      parameters:
        - name: discId
          in: path
          description: ID of disc to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/disc"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Disc not found
          content: {}
      security:
        - api_key: []
    delete:
      tags:
        - disc
      summary: Deletes a disc
      operationId: deletedisc
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: discId
          in: path
          description: disc id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Disc not found
          content: {}
      security:
        - discstore_auth:
            - write:discs
            - read:discs
components:
  schemas:
    disc:
      required:
        - name
        - distributor
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Teebird3
        distributor:
          type: string
          example: Innova
        maxWeight:
          description: Max weight in grams
          type: number
          format: double
        diameter:
          description: Diameter in centimeters
          type: number
          format: double
        height:
          description: Height in centimeters
          type: number
          format: double
        rimDepth:
          description: Rim depth in centimeters
          type: number
          format: double
        speed:
          type: integer
          format: int64
        glide:
          type: integer
          format: int64
        turn:
          type: integer
          format: int64
        fade:
          type: integer
          format: int64
        primaryUse:
          type: string
          enum:
            - Putter
            - Mid Range
            - Fairway Driver
            - Distance Driver
  securitySchemes:
    discstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://discstore.swagger.io/oauth/dialog
          scopes:
            write:discs: modify discs in your account
            read:discs: read your discs
    api_key:
      type: apiKey
      name: api_key
      in: header
