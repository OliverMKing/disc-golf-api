/*
 * Disc Golf API
 *
 * Open-source Disc golf api that follows OpenAPI specification. Source code can be found [here](https://github.com/OliverMKing/disc-golf-api).
 *
 * API version: 0.0.1
 * Contact: olivermerkleyking@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DiscApiService is a service that implements the logic for the DiscApiServicer
// This service should implement the business logic for every endpoint for the DiscApi API.
// Include any external packages or services that will be required by this service.
type DiscApiService struct {
}

// NewDiscApiService creates a default api service
func NewDiscApiService() DiscApiServicer {
	return &DiscApiService{}
}

// GetDiscById - Find disc by ID
func (s *DiscApiService) GetDiscById(ctx context.Context, discId int64) (ImplResponse, error) {
	// TODO - update GetDiscById with the required logic for this service method.
	// Add api_disc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Disc{}) or use other options such as http.Ok ...
	//return Response(200, Disc{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDiscById method not implemented")
}

// ListDisc - Get a paginated list of discs
func (s *DiscApiService) ListDisc(ctx context.Context, skipToken int64, top int64) (ImplResponse, error) {
	// TODO - update ListDisc with the required logic for this service method.
	// Add api_disc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ListDisc200Response{}) or use other options such as http.Ok ...
	//return Response(200, ListDisc200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListDisc method not implemented")
}
